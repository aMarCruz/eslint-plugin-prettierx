{
  "alignObjectProperties": {
    "description": "Align colons in multiline object literals (not applied with any of the JSON parsers).",
    "type": "boolean"
  },
  "breakLongMethodChains": {
    "description": "Break method chains with more than 3 method calls, like Prettier 1.x.",
    "type": "boolean"
  },
  "spaceBeforeFunctionParen": {
    "description": "Put a space before function parenthesis in all declarations (similar to the corresponding eslint option).",
    "type": "boolean"
  },
  "generatorStarSpacing": {
    "description": "Put spaces around the star (*) in generator functions (before and after - similar to the corresponding eslint option).",
    "type": "boolean"
  },
  "yieldStarSpacing": {
    "description": "Add spaces around the star (*) in yield* expressions (before and after - from eslint).",
    "type": "boolean"
  },
  "breakBeforeElse": {
    "description": "Always add a line break before else.",
    "type": "boolean"
  },
  "importFormatting": {
    "description": "Formatting of import statements, may be oneline to avoid conflict with VSCode 'Organize Imports' feature.",
    "oneOf": [
      {
        "enum": ["auto"],
        "description": "automatic formatting, like Prettier."
      },
      {
        "enum": ["oneline"],
        "description": "keep import statements on one line."
      }
    ]
  },
  "htmlVoidTags": {
    "description": "Format void HTML elements as void tags.",
    "type": "boolean"
  },
  "arrayBracketSpacing": {
    "description": "Put spaces between array brackets (similar to the corresponding eslint option). Status: experimental, with limited testing.",
    "type": "boolean"
  },
  "cssParenSpacing": {
    "description": "Put spaces between parens in CSS, WordPress style. Status: experimental, with limited testing.",
    "type": "boolean"
  },
  "computedPropertySpacing": {
    "description": "Put spaces between computed property brackets (similar to the corresponding eslint option). Status: experimental, with limited testing.",
    "type": "boolean"
  },
  "offsetTernaryExpressions": {
    "description": "Indent and align ternary expression branches more consistently with 'Standard JS' (similar to the corresponding eslint option).",
    "type": "boolean"
  },
  "spaceUnaryOps": {
    "description": "Put spaces after unary operator symbols, except in the middle of !! (similar to the corresponding eslint option)",
    "type": "boolean"
  },
  "spaceInParens": {
    "description": "Print spaces in between parens, WordPress style (similar to the corresponding eslint option). Not recommended in combination with the default arrowParens: 'always' option.",
    "type": "boolean"
  },
  "templateCurlySpacing": {
    "description": "Put spaces between template curly brackets (similar to the corresponding eslint option). Status: experimental, with limited testing.",
    "type": "boolean"
  },
  "typeAngleBracketSpacing": {
    "description": "Put spaces between type angle brackets. Status: experimental, with limited testing.",
    "type": "boolean"
  },
  "typeBracketSpacing": {
    "description": "Put spaces between type brackets. Status: experimental, with limited testing.",
    "type": "boolean"
  },
  "exportCurlySpacing": {
    "description": "Put or disable spaces between export curly braces.",
    "type": "boolean"
  },
  "importCurlySpacing": {
    "description": "Put or disable spaces between import curly braces.",
    "type": "boolean"
  },
  "graphqlCurlySpacing": {
    "description": "Put or disable spaces between curly braces for GraphQL.",
    "type": "boolean"
  },
  "yamlBracketSpacing": {
    "description": "Put or disable spaces between brackets / curly braces for YAML.",
    "type": "boolean"
  },
  "typeCurlySpacing": {
    "description": "Put or disable spaces between type curly braces.",
    "type": "boolean"
  },

  "indentChains": {
    "description": "Print indents at the start of chained calls.",
    "type": "boolean"
  },
  "objectCurlySpacing": {
    "description": "Disable spaces between object curly braces (similar to the corresponding eslint option).",
    "type": "boolean"
  }
}
